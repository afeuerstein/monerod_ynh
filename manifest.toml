#:schema https://raw.githubusercontent.com/YunoHost/apps/main/schemas/manifest.v2.schema.json

packaging_format = 2

id = "monerod"
name = "Monero Node"
description.en = "Run a Monero node"

version = "0.18.4.0~ynh1"

maintainers = ["afeuerstein"]

[upstream]
# NB: Only the "license" key is mandatory. Remove entries for which there's no relevant data
license = "free" # you can see the available licenses identifiers list here: https://spdx.org/licenses/
website = "https://www.getmonero.org/"
# demo = "https://demo.example.com"
# admindoc = "https://yunohost.org/packaging_apps"
userdoc = "https://docs.getmonero.org/"
code = "https://github.com/monero-project/monero"
# FIXME: optional but recommended if relevant, this is meant to contain the Common Platform Enumeration, which is
# sort of a standard id for applications defined by the NIST. In particular, YunoHost may use this is in the future
# to easily track CVE (=security reports) related to apps. The CPE may be obtained by searching here:
# https://nvd.nist.gov/products/cpe/search.
# For example, for Nextcloud, the CPE is 'cpe:2.3:a:nextcloud:nextcloud' (no need to include the version number)
cpe = "cpe:2.3:a:getmonero:monero"

# FIXME: optional but recommended (or remove if irrelevant / not applicable).
# This is meant to be an URL where people can financially support this app, especially when its development is based
# on volunteers and/or financed by its community. YunoHost may later advertise it in the webadmin.
# fund = "???" # put https://bounties.monero.social/ here?

[integration]
yunohost = ">= 12.0.9"
helpers_version = "2.1"
# FIXME: can be replaced by a list of supported archs using the dpkg --print-architecture nomenclature (amd64/i386/armhf/arm64), for example: ["amd64", "i386"]
architectures = "all"
multi_instance = false

# FIXME: replace with true, false, or "not_relevant".
# Not to confuse with the "sso" key: the "ldap" key corresponds to wether or not a user *can* login on the app using
# its YunoHost credentials.
ldap = false

# FIXME: replace with true, false, or "not_relevant".
# Not to confuse with the "ldap" key: the "sso" key corresponds to wether or not a user is *automatically logged-in*
# on the app when logged-in on the YunoHost portal.
sso = "not_relevant"

# FIXME: replace with an **estimate** minimum disk and RAM requirements. e.g. 20M, 400M, 1G...
disk = "95M" #TODO: replace with G
ram.build = "50M"
ram.runtime = "50M"

[install]
    #[install.domain]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    #type = "domain"

    #[install.path]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    #type = "path"
    #default = "/example"

    #[install.init_main_permission]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # This won't be saved as setting and will instead be used to initialize the SSOwat permission
    #type = "group"
    #default = "visitors"

    #[install.admin]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    #type = "user"

    #[install.password]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # Note that user-provided passwords questions are not automatically saved as setting
    #help.en = "Use the help field to add an information for the admin about this question."
    #type = "password"

    [install.pruned_node]
    ask.en = "Run as a pruned node? (trade sovereignty for disk space)"
    type = "boolean"
    default = false

[resources]
    # See the packaging documentation for the full set
    # of explanation regarding the behavior and properties for each of those

    [resources.sources]

    [resources.sources.main]
    in_subdir = true
    amd64.url = "https://downloads.getmonero.org/cli/monero-linux-x64-v0.18.4.0.tar.bz2"
    amd64.sha256 = "16cb74c899922887827845a41d37c7f3121462792a540843f2fcabcc1603993f"
    i386.url = "https://downloads.getmonero.org/cli/monero-linux-x86-v0.18.4.0.tar.bz2"
    i386.sha256 = "e00863e81b8b7473c46c461a3a45d09f09347c1a048da093ae0bf86db0f44355"
    armhf.url = "https://downloads.getmonero.org/cli/monero-linux-armv7-v0.18.4.0.tar.bz2"
    armhf.sha256 = "b35b5e8d27d799cea6cf3ff539a672125292784739db41181b92a9c73e1c325b"
    arm64.url = "https://downloads.getmonero.org/cli/monero-android-armv8-v0.18.4.0.tar.bz2"
    arm64.sha256 = "f252b6a24e801535bf36fbaaa7b2d6ae44b1efc5d427803d483e3c3a17d6f2cd"

    [resources.system_user]
    # This will provision/deprovision a unix system user

    [resources.install_dir]
    # This will create/remove the install dir as /var/www/$app
    # and store the corresponding setting $install_dir

    [resources.data_dir]
    # This will create/remove the data dir as /home/yunohost.app/$app
    # and store the corresponding setting $data_dir

    #[resources.permissions]
    # This will configure SSOwat permission for $domain/$path/
    # The initial allowed group of user is configured via the init_main_permission question (public=visitors, private=all_users)
    #main.url = "/"

    #[resources.ports]
    # This will pick a random port for reverse-proxying and store it as the $port setting

    #[resources.apt]
    # This will automatically install/uninstall the following apt packages
    # and implicitly define the $phpversion setting as 8.0 (if phpX.Y-foobar dependencies are listed)
    #packages = "monero"

    #[resources.database]
    # This will automatically provision/deprovison a MySQL DB and store the corresponding credentials in settings $db_user, $db_name, $db_pwd
    #type = "mysql"
